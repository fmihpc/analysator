# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python import test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  latest:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python #${{ matrix.python-version }}
      uses: actions/setup-python@v3
      # with:
      #   python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python -m pip install numpy scipy matplotlib scikit-image # add versions to matrix
    - name: Trial imports
      run: python -c 'import pytools as pt'

  import-matrix:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.9", "3.10", "3.11"]
        # matplotlib-version: ["3.3.0", "3.5.3"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python -m pip install numpy scipy matplotlib scikit-image # add versions to matrix
    - name: Trial imports
      run: python -c 'import pytools as pt'


  lint:

    runs-on: ubuntu-latest
    #continue-on-error: true
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 
      uses: actions/setup-python@v3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python -m pip install numpy scipy matplotlib scikit-image  # add versions to matrix
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --extend-exclude=trash_can,pyMayaVi
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --extend-exclude=trash_can,pyMayaVi
