# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python import test

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]
  schedule:
    - cron: '0 8 * * MON'
  workflow_dispatch:

jobs:

  latest:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        uv venv CI_env
        . CI_env/bin/activate
        uv pip install --editable ../analysator[all]
    - name: Trial imports
      run: |
        . CI_env/bin/activate
        python -c 'import analysator as pt'

  ubuntu_22_04_versions_3_9:

    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        extras: ["none", "all", "bvtk"]
        exclude:
          - extras: bvtk
            python-version: "3.12"
          - extras: bvtk
            python-version: "3.13"

    steps:
    - uses: actions/checkout@v4
    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        uv venv CI_env
        . CI_env/bin/activate
        uv pip install --editable ../analysator[all]
    - name: Trial imports
      run: |
        . CI_env/bin/activate
        python -c 'import analysator as pt'

  ubuntu_22_04_version_3_7:

    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7"]
        extras: ["none", "all", "bvtk"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --editable ../analysator[${{ matrix.extras }}]
    - name: Trial imports
      run: python -c 'import analysator as pt'

  lint:

    runs-on: ubuntu-latest
    #continue-on-error: true
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        uv venv CI_env
        . CI_env/bin/activate
        uv pip install flake8 pytest
        uv pip install --editable ../analysator[all]
    - name: Lint with flake8
      run: |
        . CI_env/bin/activate
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --extend-exclude=trash_can,pyMayaVi,CI_env
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --extend-exclude=trash_can,pyMayaVi,CI_env
